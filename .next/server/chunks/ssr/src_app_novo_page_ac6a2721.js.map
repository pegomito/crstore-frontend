{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/crs/crstore-frontend/src/app/novo/page.js"],"sourcesContent":["'use client';\nimport { \n  Box,\n  Heading,\n  Flex,\n  Input,\n  Button,\n  Stack,\n  Table,\n  Pagination,\n  ButtonGroup,\n  IconButton,\n} from \"@chakra-ui/react\";\n\nimport { useState, useEffect } from \"react\";\nimport { MdAdd, MdDelete, MdMode, MdCheck, MdChevronRight, MdChevronLeft } from \"react-icons/md\";\n\nexport default function Tasks() {\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(''); \n  const [searchTerm, setSearchTerm] = useState(''); \n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  const indexUltimoItem = currentPage * itemsPerPage;\n  const indexPrimeiroItem = indexUltimoItem - itemsPerPage;\n\n\n  const filteredTasks = tasks.filter((task) =>\n    task.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const tasksAtuais = filteredTasks.slice(indexPrimeiroItem, indexUltimoItem);\n\n  const criarTask = () => {\n    if (!input.trim()) return;\t\n    if (editingIndex !== null) {\n      const tasksAtualizadas = [...tasks];\n      tasksAtualizadas[editingIndex] = input;\n      setTasks(tasksAtualizadas);\n      setEditingIndex(null);\n    } else {\n      setTasks([...tasks, input]);\n    }\n    setInput('');\n  };\n\n  const editarTask = (index) => {\n    setInput(tasks[index]);\n    setEditingIndex(index);\n  };\n\n  const excluirTask = (index) => {\n    const taskExcluido = tasks.filter((_, i) => i !== index);\n    setTasks(taskExcluido);\n  };\n\n  useEffect(() => {\n    setCurrentPage(1); \n  }, [searchTerm]);\n\n  return (\n    <Box p={8}>\n      <Heading mb={4}> Lista de Tarefas </Heading>\n      <Flex mb={4}>\n        <Input\n          placeholder=\"Pesquisar tarefa\"\n          variant=\"subtle\"\n          mr={2}\n          value={searchTerm} \n          onChange={(e) => setSearchTerm(e.target.value)} \n        />\n      </Flex>\n      <Flex mb={4}>\n        <Input\n          placeholder=\"Digite o nome de uma tarefa!\"\n          variant=\"subtle\"\n          mr={2}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <Button \n          onClick={criarTask}\n          background=\"green\"\n          color=\"white\"\n        > {editingIndex !== null ? <MdCheck /> : <MdAdd /> }</Button>\n      </Flex>\n      <Stack style={{display: 'flex', alignItems: 'center'}}>\n        <Table.Root width=\"50%\" size=\"sm\" striped variant=\"outline\">\n          <Table.Header>\n            <Table.Row>\n              <Table.ColumnHeader>Tarefa</Table.ColumnHeader>\n              <Table.ColumnHeader textAlign=\"center\"></Table.ColumnHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {tasksAtuais.map((task, i) => (\n              <Table.Row key={i}>\n                <Table.Cell>{task}</Table.Cell>\n                <Table.Cell textAlign=\"center\">\n                  <Stack direction=\"row\">\n                    <Button\n                      background=\"Blue\"\n                      color=\"white\"\n                      variant=\"subtle\"\n                      size=\"xs\"\n                      onClick={() => editarTask(i)}\n                    >\n                      <MdMode />\n                    </Button>\n                    <Button\n                      background=\"red\"\n                      color=\"white\"\n                      variant=\"subtle\"\n                      size=\"xs\"\n                      onClick={() => excluirTask(i)}\n                    >\n                      <MdDelete />\n                    </Button>\n                  </Stack>\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table.Root>\n\n        <Pagination.Root \n          count={filteredTasks.length} \n          pageSize={itemsPerPage} \n          defaultPage={1}\n          page={currentPage}\n          onPageChange={(page) => setCurrentPage(page)}\n        >\n          <ButtonGroup variant=\"ghost\" size=\"sm\">\n            <Pagination.PrevTrigger asChild>\n              <IconButton\n                onClick={() => setCurrentPage(currentPage - 1)}\n              >\n                <MdChevronLeft />\n              </IconButton>\n            </Pagination.PrevTrigger>\n\n            <Pagination.Items\n              render={(page) => (\n                <IconButton \n                  onClick={() => setCurrentPage(page.value)} \n                  variant={{ base: \"ghost\", _selected: \"outline\" }}\n                >\n                  {page.value}\n                </IconButton>\n              )}\n            />\n\n            <Pagination.NextTrigger asChild>\n              <IconButton\n                onClick={() => setCurrentPage(currentPage + 1)}\n              >\n                <MdChevronRight />\n              </IconButton>\n            </Pagination.NextTrigger>\n          </ButtonGroup>\n        </Pagination.Root>\n      </Stack>\n    </Box>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}