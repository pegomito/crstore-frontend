{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/usuarios/crstore/crstore-frontend/src/components/ui/color-mode.jsx"],"sourcesContent":["'use client'\n\nimport { ClientOnly, IconButton, Skeleton, Span } from '@chakra-ui/react'\nimport { ThemeProvider, useTheme } from 'next-themes'\n\nimport * as React from 'react'\nimport { LuMoon, LuSun } from 'react-icons/lu'\n\nexport function ColorModeProvider(props) {\n  return (\n    <ThemeProvider attribute='class' disableTransitionOnChange {...props} />\n  )\n}\n\nexport function useColorMode() {\n  const { resolvedTheme, setTheme } = useTheme()\n  const toggleColorMode = () => {\n    setTheme(resolvedTheme === 'dark' ? 'light' : 'dark')\n  }\n  return {\n    colorMode: resolvedTheme,\n    setColorMode: setTheme,\n    toggleColorMode,\n  }\n}\n\nexport function useColorModeValue(light, dark) {\n  const { colorMode } = useColorMode()\n  return colorMode === 'dark' ? dark : light\n}\n\nexport function ColorModeIcon() {\n  const { colorMode } = useColorMode()\n  return colorMode === 'dark' ? <LuMoon /> : <LuSun />\n}\n\nexport const ColorModeButton = React.forwardRef(\n  function ColorModeButton(props, ref) {\n    const { toggleColorMode } = useColorMode()\n    return (\n      <ClientOnly fallback={<Skeleton boxSize='8' />}>\n        <IconButton\n          onClick={toggleColorMode}\n          variant='ghost'\n          aria-label='Toggle color mode'\n          size='sm'\n          ref={ref}\n          {...props}\n          css={{\n            _icon: {\n              width: '5',\n              height: '5',\n            },\n          }}\n        >\n          <ColorModeIcon />\n        </IconButton>\n      </ClientOnly>\n    )\n  },\n)\n\nexport const LightMode = React.forwardRef(function LightMode(props, ref) {\n  return (\n    <Span\n      color='fg'\n      display='contents'\n      className='chakra-theme light'\n      colorPalette='gray'\n      colorScheme='light'\n      ref={ref}\n      {...props}\n    />\n  )\n})\n\nexport const DarkMode = React.forwardRef(function DarkMode(props, ref) {\n  return (\n    <Span\n      color='fg'\n      display='contents'\n      className='chakra-theme dark'\n      colorPalette='gray'\n      colorScheme='dark'\n      ref={ref}\n      {...props}\n    />\n  )\n})\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AANA;;;;;AAQO,SAAS,kBAAkB,KAAK;IACrC,qBACE,6LAAC,mJAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;QAAE,GAAG,KAAK;;;;;;AAExE;KAJgB;AAMT,SAAS;;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,kBAAkB;QACtB,SAAS,kBAAkB,SAAS,UAAU;IAChD;IACA,OAAO;QACL,WAAW;QACX,cAAc;QACd;IACF;AACF;GAVgB;;QACsB,mJAAA,CAAA,WAAQ;;;AAWvC,SAAS,kBAAkB,KAAK,EAAE,IAAI;;IAC3C,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,SAAS,OAAO;AACvC;IAHgB;;QACQ;;;AAIjB,SAAS;;IACd,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,uBAAS,6LAAC,iJAAA,CAAA,SAAM;;;;6BAAM,6LAAC,iJAAA,CAAA,QAAK;;;;;AACnD;IAHgB;;QACQ;;;MADR;AAKT,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAC5C,SAAS,gBAAgB,KAAK,EAAE,GAAG;;IACjC,MAAM,EAAE,eAAe,EAAE,GAAG;IAC5B,qBACE,6LAAC,2MAAA,CAAA,aAAU;QAAC,wBAAU,6LAAC,+LAAA,CAAA,WAAQ;YAAC,SAAQ;;;;;;kBACtC,cAAA,6LAAC,mMAAA,CAAA,aAAU;YACT,SAAS;YACT,SAAQ;YACR,cAAW;YACX,MAAK;YACL,KAAK;YACJ,GAAG,KAAK;YACT,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,QAAQ;gBACV;YACF;sBAEA,cAAA,6LAAC;;;;;;;;;;;;;;;AAIT;;QArB8B;;;;QAAA;;;;AAwBzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,SAAS,UAAU,KAAK,EAAE,GAAG;IACrE,qBACE,6LAAC,sLAAA,CAAA,OAAI;QACH,OAAM;QACN,SAAQ;QACR,WAAU;QACV,cAAa;QACb,aAAY;QACZ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEO,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,SAAS,SAAS,KAAK,EAAE,GAAG;IACnE,qBACE,6LAAC,sLAAA,CAAA,OAAI;QACH,OAAM;QACN,SAAQ;QACR,WAAU;QACV,cAAa;QACb,aAAY;QACZ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/usuarios/crstore/crstore-frontend/src/components/ui/provider.jsx"],"sourcesContent":["'use client'\n\nimport { ChakraProvider, defaultSystem } from '@chakra-ui/react'\nimport { ColorModeProvider } from './color-mode'\n\nexport function Provider(props) {\n  return (\n    <ChakraProvider value={defaultSystem}>\n      <ColorModeProvider {...props} />\n    </ChakraProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAHA;;;;AAKO,SAAS,SAAS,KAAK;IAC5B,qBACE,6LAAC,yLAAA,CAAA,iBAAc;QAAC,OAAO,mKAAA,CAAA,gBAAa;kBAClC,cAAA,6LAAC,4IAAA,CAAA,oBAAiB;YAAE,GAAG,KAAK;;;;;;;;;;;AAGlC;KANgB","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///home/usuarios/crstore/crstore-frontend/src/components/ui/toaster.jsx"],"sourcesContent":["'use client'\n\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined\n  let value = ops[0]\n  let i = 1\n  while (i < ops.length) {\n    const op = ops[i]\n    const fn = ops[i + 1]\n    i += 2\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      return undefined\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value\n      value = fn(value)\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => value.call(lastAccessLHS, ...args))\n      lastAccessLHS = undefined\n    }\n  }\n  return value\n}\n;\n\nimport {\n  Toaster as ChakraToaster,\n  Portal,\n  Spinner,\n  Stack,\n  Toast,\n  createToaster,\n} from '@chakra-ui/react'\n\nexport const toaster = createToaster({\n  placement: 'bottom-end',\n  pauseOnPageIdle: true,\n})\n\nexport const Toaster = () => {\n  return (\n    <Portal>\n      <ChakraToaster toaster={toaster} insetInline={{ mdDown: '4' }}>\n        {(toast) => (\n          <Toast.Root width={{ md: 'sm' }}>\n            {toast.type === 'loading' ? (\n              <Spinner size='sm' color='blue.solid' />\n            ) : (\n              <Toast.Indicator />\n            )}\n            <Stack gap='1' flex='1' maxWidth='100%'>\n              {toast.title && <Toast.Title>{toast.title}</Toast.Title>}\n              {toast.description && (\n                <Toast.Description>{toast.description}</Toast.Description>\n              )}\n            </Stack>\n            {toast.action && (\n              <Toast.ActionTrigger>{toast.action.label}</Toast.ActionTrigger>\n            )}\n            {_optionalChain([\n              toast,\n              'access',\n              (_) => _.meta,\n              'optionalAccess',\n              (_2) => _2.closable,\n            ]) && <Toast.CloseTrigger />}\n          </Toast.Root>\n        )}\n      </ChakraToaster>\n    </Portal>\n  )\n}\n"],"names":[],"mappings":";;;;;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBA;;AAEA,SAAS,eAAe,GAAG;IACzB,IAAI,gBAAgB;IACpB,IAAI,QAAQ,GAAG,CAAC,EAAE;IAClB,IAAI,IAAI;IACR,MAAO,IAAI,IAAI,MAAM,CAAE;QACrB,MAAM,KAAK,GAAG,CAAC,EAAE;QACjB,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE;QACrB,KAAK;QACL,IAAI,CAAC,OAAO,oBAAoB,OAAO,cAAc,KAAK,SAAS,MAAM;YACvE,OAAO;QACT;QACA,IAAI,OAAO,YAAY,OAAO,kBAAkB;YAC9C,gBAAgB;YAChB,QAAQ,GAAG;QACb,OAAO,IAAI,OAAO,UAAU,OAAO,gBAAgB;YACjD,QAAQ,GAAG,CAAC,GAAG,OAAS,MAAM,IAAI,CAAC,kBAAkB;YACrD,gBAAgB;QAClB;IACF;IACA,OAAO;AACT;;;AAYO,MAAM,UAAU,CAAA,GAAA,2LAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,WAAW;IACX,iBAAiB;AACnB;AAEO,MAAM,UAAU;IACrB,qBACE,6LAAC,iLAAA,CAAA,SAAM;kBACL,cAAA,6LAAC,yMAAA,CAAA,UAAa;YAAC,SAAS;YAAS,aAAa;gBAAE,QAAQ;YAAI;sBACzD,CAAC,sBACA,6LAAC,8NAAA,CAAA,QAAK,CAAC,IAAI;oBAAC,OAAO;wBAAE,IAAI;oBAAK;;wBAC3B,MAAM,IAAI,KAAK,0BACd,6LAAC,6LAAA,CAAA,UAAO;4BAAC,MAAK;4BAAK,OAAM;;;;;iDAEzB,6LAAC,8NAAA,CAAA,QAAK,CAAC,SAAS;;;;;sCAElB,6LAAC,yLAAA,CAAA,QAAK;4BAAC,KAAI;4BAAI,MAAK;4BAAI,UAAS;;gCAC9B,MAAM,KAAK,kBAAI,6LAAC,8NAAA,CAAA,QAAK,CAAC,KAAK;8CAAE,MAAM,KAAK;;;;;;gCACxC,MAAM,WAAW,kBAChB,6LAAC,8NAAA,CAAA,QAAK,CAAC,WAAW;8CAAE,MAAM,WAAW;;;;;;;;;;;;wBAGxC,MAAM,MAAM,kBACX,6LAAC,8NAAA,CAAA,QAAK,CAAC,aAAa;sCAAE,MAAM,MAAM,CAAC,KAAK;;;;;;wBAEzC,eAAe;4BACd;4BACA;4BACA,CAAC,IAAM,EAAE,IAAI;4BACb;4BACA,CAAC,KAAO,GAAG,QAAQ;yBACpB,mBAAK,6LAAC,8NAAA,CAAA,QAAK,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;;AAMrC;KAhCa","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///home/usuarios/crstore/crstore-frontend/src/app/layout.js"],"sourcesContent":["'use client'\nimport { Provider } from \"@/components/ui/provider\"\nimport { Toaster } from \"@/components/ui/toaster\"\n\nexport default function RootLayout({ children }) {\n  return (\n    <html suppressHydrationWarning>\n      <body>\n        <Provider>\n          {children}\n          <Toaster />\n        </Provider>        \n      </body>\n    </html>\n  )\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,6LAAC;QAAK,wBAAwB;kBAC5B,cAAA,6LAAC;sBACC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;;oBACN;kCACD,6LAAC,sIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAKlB;KAXwB","debugId":null}}]
}